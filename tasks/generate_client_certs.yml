# generate_client_certs.yml

- name: Create client key
  command: "openssl genrsa -out {{ dds_temp_path }}/key.pem 4096"
  args:
    creates: "{{ dds_temp_path }}/key.pem"

- name: Create client CSR 
  command: "openssl req -subj '/CN=client' -new -key {{ dds_temp_path}}/key.pem -out {{ dds_temp_path }}/client.csr"
  args:
    creates: "{{ dds_temp_path }}/client.csr"

- name: Creating client extfile
  copy:
    dest: "{{ dds_client_extfile }}"
    content:  "extendedKeyUsage = clientAuth"

- name: Create the client certificate 
  command: "openssl x509 -req -days 365 -sha256 -in {{ dds_temp_path }}/client.csr -CA {{ dds_temp_path }}/ca.pem -CAkey {{ dds_temp_path }}/ca-key.pem -CAcreateserial -out {{ dds_temp_path }}/cert.pem -extfile {{ dds_client_extfile }} -passin file:{{ dds_passphrase_file }}"
  args:
    creates: "{{ dds_temp_path }}/cert.pem"

- name: Check that the client cert path exists
  file:
    state: directory
    path: "{{ dds_client_cert_path }}"

- name: Copy client certs
  copy:
    remote_src: true
    src: "{{ dds_temp_path }}/{{ item }}"
    dest: "{{ dds_client_cert_path }}"
  with_items:
    - ca.pem
    - cert.pem
    - key.pem

- name: Set file permissions 
  file:
    path: "{{ dds_client_cert_path }}/{{ item }}"
    mode: 0444
  with_items:
    - ca.pem
    - cert.pem
    - key.pem
